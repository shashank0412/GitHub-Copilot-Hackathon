Theme 3: Personal Finance Tracker (JavaScript)


HTML :

<!DOCTYPE html>
<html>
<head>
    <title>Personal Finance Tracker</title>
    <link rel="stylesheet" type="text/css" href="styles.css">
</head>
<body>
    <h1>Personal Finance Tracker</h1>

    <div class="container">
        <h2>Add Transaction</h2>
        <input type="text" id="description" placeholder="Description">
        <input type="number" id="amount" placeholder="Amount">
        <select id="type">
            <option value="income">Income</option>
            <option value="expense">Expense</option>
        </select>
        <button onclick="addTransaction()">Add</button>
    </div>

    <div class="container">
        <h2>Transaction History</h2>
        <ul id="transaction-list"></ul>
    </div>

    <div class="container">
        <h2>Current Balance</h2>
        <p id="balance">0</p>
    </div>

    <script src="script.js"></script>
</body>
</html>





CSS :


.container {
    margin-top: 20px;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

.container h2 {
    margin-top: 0;
}

input[type="text"], input[type="number"], select {
    margin-bottom: 10px;
}

button {
    background-color: #4CAF50;
    color: white;
    padding: 5px 10px;
    border: none;
    border-radius: 3px;
    cursor: pointer;
}

button:hover {
    background-color: #45a049;
}

ul {
    padding: 0;
}

li {
    list-style-type: none;
    margin-bottom: 5px;
}

.income {
    color: green;
}

.expense {
    color: red;
}





JAVASCRIPT : 


let transactions = [];
let balance = 0;

function addTransaction() {
    const description = document.getElementById('description').value;
    const amount = +document.getElementById('amount').value;
    const type = document.getElementById('type').value;

    if (description.trim() === '' || isNaN(amount)) {
        alert('Please enter a valid description and amount.');
        return;
    }

    const transaction = {
        id: generateID(),
        description,
        amount,
        type
    };

    transactions.push(transaction);

    updateTransactions();
    updateBalance();

    document.getElementById('description').value = '';
    document.getElementById('amount').value = '';
}

function deleteTransaction(id) {
    transactions = transactions.filter(transaction => transaction.id !== id);
    updateTransactions();
    updateBalance();
}

function updateTransactions() {
    const transactionList = document.getElementById('transaction-list');
    transactionList.innerHTML = '';

    transactions.forEach(transaction => {
        const listItem = document.createElement('li');
        listItem.textContent = `${transaction.description}: ${transaction.amount}`;

        const deleteButton = document.createElement('button');
        deleteButton.textContent = 'Delete';
        deleteButton.className = 'delete-button';
        deleteButton.addEventListener('click', () => deleteTransaction(transaction.id));

        listItem.appendChild(deleteButton);
        transactionList.appendChild(listItem);
    });
}

function updateBalance() {
    const income = transactions
        .filter(transaction => transaction.type === 'income')
        .reduce((total, transaction) => total + transaction.amount, 0);

    const expenses = transactions
        .filter(transaction => transaction.type === 'expense
